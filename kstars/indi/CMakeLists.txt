kde4_header()

add_subdirectory( fli ) 
add_subdirectory( webcam ) 
add_subdirectory( apogee ) 
add_subdirectory( cfitsio ) 

include_directories( ${KDE4_INCLUDE_DIR} ${QT_INCLUDES} ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR}  )


########### next target ###############

set(indiserver_SRCS indiserver.c fq.c )

kde4_automoc(${indiserver_SRCS})

kde4_add_executable(indiserver ${indiserver_SRCS})

target_link_libraries(indiserver  ${QT_AND_KDECORE_LIBS} pthread )

install_targets(/bin indiserver )


########### next target ###############

set(lx200basic_SRCS 
   indidrivermain.c 
   base64.c 
   eventloop.c 
   lx200driver.c 
   lx200basic.cpp )

kde4_automoc(${lx200basic_SRCS})

kde4_add_executable(lx200basic ${lx200basic_SRCS})

target_link_libraries(lx200basic  ${QT_AND_KDECORE_LIBS} )

install_targets(/bin lx200basic )


########### next target ###############

set(lx200generic_SRCS 
   indidrivermain.c 
   base64.c 
   eventloop.c 
   lx200driver.c 
   lx200autostar.cpp 
   lx200_16.cpp 
   lx200gps.cpp 
   lx200generic.cpp 
   lx200classic.cpp )

kde4_automoc(${lx200generic_SRCS})

kde4_add_executable(lx200generic ${lx200generic_SRCS})

target_link_libraries(lx200generic  ${QT_AND_KDECORE_LIBS} m )

install_targets(/bin lx200generic )


########### next target ###############

set(celestrongps_SRCS 
   indidrivermain.c 
   base64.c 
   eventloop.c 
   celestronprotocol.c 
   celestrongps.cpp )

kde4_automoc(${celestrongps_SRCS})

kde4_add_executable(celestrongps ${celestrongps_SRCS})

target_link_libraries(celestrongps  ${QT_AND_KDECORE_LIBS} m )

install_targets(/bin celestrongps )


########### next target ###############

set(apmount_SRCS 
   indidrivermain.c 
   base64.c 
   eventloop.c 
   lx200driver.c 
   apmount.cpp )

kde4_automoc(${apmount_SRCS})

kde4_add_executable(apmount ${apmount_SRCS})

target_link_libraries(apmount  ${QT_AND_KDECORE_LIBS} )

install_targets(/bin apmount )


########### next target ###############

set(temma_SRCS 
   indidrivermain.c 
   base64.c 
   eventloop.c 
   temmadriver.c )

kde4_automoc(${temma_SRCS})

kde4_add_executable(temma ${temma_SRCS})

target_link_libraries(temma  ${QT_AND_KDECORE_LIBS} m )

install_targets(/bin temma )


########### next target ###############

set(skycommander_SRCS 
   indidrivermain.c 
   base64.c 
   eventloop.c 
   lx200driver.c 
   skycommander.c )

kde4_automoc(${skycommander_SRCS})

kde4_add_executable(skycommander ${skycommander_SRCS})

target_link_libraries(skycommander  ${QT_AND_KDECORE_LIBS} m )

install_targets(/bin skycommander )


########### next target ###############

set(intelliscope_SRCS 
   indidrivermain.c 
   base64.c 
   eventloop.c 
   lx200driver.c 
   intelliscope.c )

kde4_automoc(${intelliscope_SRCS})

kde4_add_executable(intelliscope ${intelliscope_SRCS})

target_link_libraries(intelliscope  ${QT_AND_KDECORE_LIBS} m )

install_targets(/bin intelliscope )


########### next target ###############

set($(bin_add)_SRCS dummy.cpp )

kde4_automoc(${$(bin_add)_SRCS})

file(WRITE dummy.cpp "//autogenerated file by cmake\n")
kde4_add_executable($(bin_add) ${$(bin_add)_SRCS})

target_link_libraries($(bin_add)  ${QT_AND_KDECORE_LIBS} )

install_targets(/bin $(bin_add) )


########### install files ###############

install_files( ${DATA_INSTALL_DIR}/kstars FILES drivers.xml apogee_caminfo.xml )

kde4_create_doxygen_docs(  )

kde4_footer()



#original Makefile.am contents follow:

#appdatadir = $(kde_datadir)/kstars
#appdata_DATA = drivers.xml apogee_caminfo.xml
#
#AM_CPPFLAGS = -DTOP_DATADIR=\"$(appdatadir)\"
#
#if LINUX
#bin_add   =  apogee_ppi sbigccd v4ldriver v4lphilips meade_lpi fliccd fliwheel flipdf
#endif
#
#bin_PROGRAMS = indiserver lx200basic lx200generic celestrongps apmount temma skycommander intelliscope $(bin_add)
#
#liblilxml_a_SOURCES = lilxml.c
#libindicom_a_SOURCES = indicom.c base64.c
#
#noinst_LIBRARIES =  liblilxml.a libindicom.a
#
#indiserver_SOURCES = indiserver.c fq.c
#indiserver_LDADD = liblilxml.a -lpthread $(LIBSOCKET)
#
#lx200generic_SOURCES = indidrivermain.c base64.c eventloop.c lx200driver.c lx200autostar.cpp lx200_16.cpp lx200gps.cpp lx200generic.cpp lx200classic.cpp
#lx200generic_LDADD = liblilxml.a libindicom.a -lm
#
#lx200basic_SOURCES = indidrivermain.c base64.c eventloop.c lx200driver.c lx200basic.cpp
#lx200basic_LDADD = liblilxml.a libindicom.a
#
#celestrongps_SOURCES =  indidrivermain.c base64.c eventloop.c celestronprotocol.c celestrongps.cpp
#celestrongps_LDADD = liblilxml.a libindicom.a -lm
#
#apmount_SOURCES = indidrivermain.c base64.c eventloop.c  lx200driver.c apmount.cpp
#apmount_LDADD =  liblilxml.a libindicom.a
#
#fliccd_SOURCES =  eventloop.c base64.c fli_ccd.c indidrivermain.c
#fliccd_LDADD = fli/libfli.la libindicom.a liblilxml.a cfitsio/libcfitsio.la -lm -lz $(LIBSOCKET)
#
#fliwheel_SOURCES =  eventloop.c base64.c fli_wheel.c indidrivermain.c
#fliwheel_LDADD = fli/libfli.la libindicom.a liblilxml.a -lm
#
#flipdf_SOURCES = eventloop.c base64.c fli_pdf.c indidrivermain.c
#flipdf_LDADD = fli/libfli.la libindicom.a liblilxml.a -lm
#
#v4ldriver_SOURCES = eventloop.c base64.c indidrivermain.c v4ldriver.cpp indi_v4l.cpp
#v4ldriver_LDADD = libindicom.a liblilxml.a webcam/libwebcam.la cfitsio/libcfitsio.la -lm -lz
#
#v4lphilips_SOURCES = eventloop.c base64.c indidrivermain.c v4ldriver.cpp v4lphilips.cpp indi_philips.cpp
#v4lphilips_LDADD = libindicom.a liblilxml.a webcam/libwebcam.la cfitsio/libcfitsio.la -lm -lz
#
#meade_lpi_SOURCES = eventloop.c base64.c indidrivermain.c v4ldriver.cpp indi_lpi.cpp
#meade_lpi_LDADD = libindicom.a liblilxml.a webcam/libwebcam.la cfitsio/libcfitsio.la -lz
#
#temma_SOURCES =  indidrivermain.c base64.c eventloop.c temmadriver.c
#temma_LDADD = liblilxml.a libindicom.a -lm
#
#skycommander_SOURCES =  indidrivermain.c base64.c eventloop.c lx200driver.c skycommander.c
#skycommander_LDADD = liblilxml.a libindicom.a -lm
#
#intelliscope_SOURCES =  indidrivermain.c base64.c eventloop.c lx200driver.c intelliscope.c
#intelliscope_LDADD = liblilxml.a libindicom.a -lm
#
#apogee_ppi_SOURCES = apogee_ppi.cpp base64.c eventloop.c indidrivermain.c
#apogee_ppi_LDADD = libindicom.a liblilxml.a apogee/libapogee_PPI.la -lz
#
#sbigccd_SOURCES = sbigccd.cpp base64.c eventloop.c indidrivermain.c
#sbigccd_LDADD = libindicom.a liblilxml.a -lz
#
#install-exec-hook:
#	$(mkinstalldirs) $(DESTDIR)$(bindir)
#	rm -f $(DESTDIR)$(bindir)/lx200classic
#	$(LN_S) lx200generic $(DESTDIR)$(bindir)/lx200classic
#	rm -f $(DESTDIR)$(bindir)/lx200autostar
#	$(LN_S) lx200generic $(DESTDIR)$(bindir)/lx200autostar
#	rm -f $(DESTDIR)$(bindir)/lx200_16
#	$(LN_S) lx200generic $(DESTDIR)$(bindir)/lx200_16
#	rm -f $(DESTDIR)$(bindir)/lx200gps
#	$(LN_S) lx200generic $(DESTDIR)$(bindir)/lx200gps
#
#uninstall-local:
#	rm $(DESTDIR)$(bindir)/lx200autostar $(DESTDIR)$(bindir)/lx200_16 $(DESTDIR)$(bindir)/lx200gps
#
#KDE_OPTIONS = nofinal
#
#if LINUX
#SUBDIRS = fli webcam apogee cfitsio
#endif
#
#include $(top_srcdir)/admin/Doxyfile.am
